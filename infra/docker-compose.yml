version: '3.8'
services:

  frontend:
    container_name: foodgram-front
    build: ../frontend
    volumes:
      - ../frontend/:/app/result_build/

  backend:
    build:
      context: ../backend
    container_name: backend
    command: bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ../backend:/app
    working_dir: /app
    ports:
      - "8000:8000"
    expose:
      - "8000"
    depends_on:
      - database
      - nginx
    env_file:
      - ../backend/.env.example

  database:
    image: postgres:16
    container_name: postgres
    env_file:
      - ../backend/.env.example
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  nginx:
    container_name: foodgram-proxy
    image: nginx:1.25.4-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html/
      - ../docs/:/usr/share/nginx/html/api/docs/

volumes:
  postgres_data:
    name: foodgram_postgres_data